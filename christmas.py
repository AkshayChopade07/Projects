# -*- coding: utf-8 -*-
"""Christmas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y3vR5tJJREyJFWstoVixSI8HCGspP2TF

Our toy store need to generate 5.7лю rupess profit.
Other way we need to close it :(

![](https://media.timeout.com/images/105361021/image.jpg)
"""

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("https://raw.githubusercontent.com/lnklnklnk/codinginvaders/main/christmas_sale_2019.csv")

df.head(10)

# Let's add a new column with revenue
df['revenue'] = df['count'] * df['sale_price']

# Display the top 10 lines of the table
### YOUR CODE HERE

# Let's calculate how much sales did we get!
df['revenue'].sum()

# Let's add a new column with total cost price
df['total_cost'] = df['count'] * df['purchase_price']
df['total_cost'].sum()

# Let's add a profit column. 
# Profit = Revenue - Total Cost

### YOUR CODE HERE
profit = df['profit'].sum()
profit

# Let's make a visualisation of our sales per category per day
df.groupby(['date','category']).sum()['count'].unstack().plot(figsize=(10, 7))

"""Does it looks OK?"""

# List of all categories
df['category'].unique()

# Let's take a view on dolls category that looks OK
df.loc[df['category'] == 'Games & Puzzles']

# Let's take a view on "Education & Construction Toys" category that looks strange
### YOUR CODE HERE

"""Now we will a make a prediction: how much profit we can generate if we will have those categories in stock"""

# Let's find all the data for Education & Construction Toys category
education_all = df.loc[df['category'] == 'Education & Construction Toys']
education_all

# Now we need to filter the data for the days when items were in stock
education_in_stock = education_all.loc[df['in_stock_eod'] != 0]
education_in_stock

# Now we are calculating average profit per day for these days
education_avg_profit = education_in_stock['profit'].mean()
education_avg_profit

# Now let's filter the data for the days when there were no sales
education_no_sales = education_all.loc[df['count'] == 0]
education_no_sales

# Now we should count the number of days when there were no sales
education_days_without_sales = education_no_sales['date'].count()
education_days_without_sales

# How much profit would we get in this category if we had enough stock?
education_additional_profit = education_avg_profit * education_days_without_sales
education_additional_profit

# Now let's calculate additional profit for
# * 'Vehicles, Tracksets & Remote Control Toys'

vehicles_all = ### YOUR CODE HERE
vehicles_in_stock = vehicles_all.loc[df['in_stock_eod'] != 0]
vehicles_avg_profit = vehicles_in_stock['profit'].mean()

vehicles_no_sales = vehicles_all.loc[df['count'] == 0]
vehicles_days_without_sales = vehicles_no_sales['date'].count()

vehicles_additional_profit = vehicles_avg_profit * vehicles_days_without_sales

vehicles_additional_profit

# Now let's calculate additional profit for
# * 'Collectibles & Toy Guns'

collectibles_all = ### YOUR CODE HERE
collectibles_in_stock = collectibles_all.loc[df['in_stock_eod'] != 0]
collectibles_avg_profit = collectibles_in_stock['profit'].mean()

collectibles_no_sales = collectibles_all.loc[df['count'] == 0]
collectibles_days_without_sales = collectibles_no_sales['date'].count()

collectibles_additional_profit = collectibles_avg_profit * collectibles_days_without_sales
collectibles_additional_profit

# Let's calculate total additional profit for all the categories
total_additional_profit = ### YOUR CODE HERE
total_additional_profit

profit + total_additional_profit